version: '3'

services:

  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_DATABASE=tests
    networks:
      - backend

  db:
    container_name: postgres-story-manager
    image: postgres
    restart: always
    environment:
      - POSTGRES_DB=Run_App
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=25032001
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    networks:
      - backend

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    networks:
      - backend
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  profile-service:
    container_name: profile-service
    image: denpool/profile-service:0.0.1
    restart: always
    networks:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Run_App
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=25032001
      - STORAGE-DIRECTORY=ProfileService/
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://storage-service:6500
    depends_on:
      discovery-service:
        condition: service_started

  social-service:
    container_name: social-service
    image: denpool/social-service:0.0.1
    environment:
      - SPRING_MAIL_USERNAME=runapp1234@gmail.com
      - SPRING_MAIL_PASSWORD=qgcoclajkzvdwkcu
    depends_on:
      discovery-service:
        condition: service_started
    networks:
      - backend

  guild-service:
    container_name: guild-service
    image: denpool/guild-service:0.0.1
    restart: always
    networks:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Run_App
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=25032001
      - STORAGE-DIRECTORY=ProfileService/
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://storage-service:6500
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORY_MANAGER_SERVICE_URL=http://story-manager-service:4444
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_PROFILE_SERVICE_URL=http://profile-service:4000
    depends_on:
      discovery-service:
        condition: service_started

  shoes-service:
    container_name: shoes-service
    image: denpool/shoes-service:0.0.1
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Run_App
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=25032001
      - STORAGE-DIRECTORY=ShoesService/
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://storage-service:6500
    networks:
      - backend
    depends_on:
      discovery-service:
        condition: service_started

  achievement-service:
    container_name: achievement-service
    image: denpool/achievement-service:0.0.1
    networks:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Run_App
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=25032001
      - STORAGE-DIRECTORY=AchievementService/
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://storage-service:6500
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORY-MANAGER-SERVICE_URL=http://story-manager-service:4444
    depends_on:
      discovery-service:
        condition: service_started

  story-manager-service:
    container_name: story-manager-service
    image: denpool/story-manager-service:0.0.1
    networks:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Run_App
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=25032001
      - STORAGE-DIRECTORY=StoryManagerService/
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://storage-service:4444
    depends_on:
      discovery-service:
        condition: service_started

  story-progress-service:
    container_name: story-progress-service
    image: denpool/story-progress-service:0.0.1
    networks:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Run_App
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=25032001
    depends_on:
      discovery-service:
        condition: service_started

  workout-service:
    container_name: workout-service
    image: denpool/workout-service:0.0.1
    networks:
      - backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/Run_App
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=25032001
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_STORAGE-SERVICE_URL=http://storage-service:6500
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_ACHIEVEMENT-SERVICE_URL=http://achievement-service:3333
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_PROFILE-SERVICE_URL=http://profile-service:4000
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_GUILD-SERVICE_URL=http://guild-service:8000
      - SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_SHOES-SERVICE_URL=http://shoes-service:2222
    depends_on:
      discovery-service:
        condition: service_started

  discovery-service:
    container_name: discovery-service
    image: denpool/discovery-service
    restart: always
    ports:
      - "7777:8761"
    networks:
      - backend
    depends_on:
      zipkin:
        condition: service_healthy

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.37.1
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend
    depends_on:
      discovery-service:
        condition: service_started

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - backend

  storage-service:
    container_name: storage-service
    image: denpool/storage-service:0.0.1
    restart: always
    networks:
      - backend
    depends_on:
      discovery-service:
        condition: service_started

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:8.5.2
    restart: always
    ports:
      - "8888:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - backend
    depends_on:
      prometheus:
        condition: service_started

  event-service:
    container_name: event-service
    depends_on:
      - mysqldb
    image: denpool/event-service:0.0.1
    networks:
      - backend
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url" : "jdbc:mysql://mysqldb:${MYSQLDB_DOCKER_PORT}/${MYSQLDB_DATABASE}?serverTimezone=UTC",
        "spring.datasource.username" : "root",
        "spring.datasource.password" : "12345",
        "spring.jpa.hibernate.ddl-auto" : "update",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect"
      }'

  api-gateway:
    container_name: api-gateway
    image: denpool/api-gateway:0.0.1
    ports:
      - "3000:3000"
    networks:
      - backend
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "5656:8080"
    networks:
      - backend

networks:
  backend:
volumes:
  db-data: